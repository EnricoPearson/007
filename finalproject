var phaseInc = 1.0 / 64.0;
var food; 
var counter=0;
var song;
var s;
var scl = 20;
var direction = 2;
var phase = 1.0;
var slider1;
var x;
var StepSize = 5;
var realWidth;
var sound1;


function preload() {
    phone = loadImage('nokia3310crop5.png');	
		sound1= loadSound('Super_Mario_Bros_-Mushroom_Sound_Effect.mp3');
}

function setup() {
	//background(100,150, 200);
	//fill(200, 100, 150);
  createCanvas(600,1200);
	Cx = width/2;
	Cy = height/2;
  s = new Snake();
  frameRate(20);
  pickLocation();
	
	//slider1 = createSlider(50,300,50);
//slider1.position(100,100);
//slider1.size(100,100);
//Counter = Counter + Sign*(slider1.value();)
	
	
		phone.resize(700,1600,100); 

}



function drawFood(){
  //push();
  colorMode(HSB);
  fill(255 * phase, 255, 255);
  rect(food.x, food.y, scl, scl);
 // pop();
}

function drawScoreboard(){ 
  text("LENGTH " +counter,50,100); 
}

function pickLocation(){
  var cols = floor(width/scl);
  var rows = floor(height/scl);
  food = createVector(floor(random(cols)), floor(random(rows)));
  food.mult(scl);

}

function draw() {
  background(200,100,100);
  s.death();
  s.update();
  s.show();
  drawFood();
  drawScoreboard();

	

  image(phone,-50,-320);
	
//var x = slider1.value()
  
  if(s.eat(food)){
		sound1.play();
    pickLocation();
    counter++;
  }
  if(s.death()){
    counter = 0;
  }
  
  phase += phaseInc;
    if (phase >= 1.0) {
        phase -= 1.0;
    }
}

function keyPressed(){
  if (keyCode === UP_ARROW && direction != 3){
    s.dir(0, -1);
    direction = 1;
  }else if(keyCode === DOWN_ARROW && direction != 1){
    s.dir(0, 1);
    direction = 3;
  }else if(keyCode === RIGHT_ARROW && direction != 4){
    s.dir(1, 0);
    direction = 2;
  }else if(keyCode === LEFT_ARROW && direction != 2){
    s.dir(-1, 0);
    direction = 4;
  }
}

function Snake() {
  this.x = 0;
  this.y = 0;
  this.xspeed = 1;
  this.yspeed = 0;
  this.total = 0;
  this.tail = [];

  this.eat = function(pos) {
    var d = dist(this.x, this.y, pos.x, pos.y);
    if (d < 1) {
      this.total++;
      return true;
    } else {
      return false;
    }
  }

  this.dir = function(x, y) {
    this.xspeed = x;
    this.yspeed = y;
  }

  this.death = function() {
    for (var i = 0; i < this.tail.length; i++) {
      var pos = this.tail[i];
      var d = dist(this.x, this.y, pos.x, pos.y);

      if (d < 1) {
        this.total = 0;
        this.tail = [];
        return true;
      }
    }
    return false;
  }

  this.update = function() {
    if (this.total === this.tail.length) {
      for (var i = 0; i < this.tail.length-1; i++) {
        this.tail[i] = this.tail[i+1];
      }
    }
    this.tail[this.total-1] = createVector(this.x, this.y);
    if (this.x >= 580 && direction === 2) {
      this.x = -20;
    } else if (this.x <= 0 && direction === 4) {
      this.x = 600;
    }
    if (this.y >= 580 && direction === 3) {
      this.y = -20;
    } else if (this.y <= 0 && direction === 1) {
      this.y = 600;
    }
    this.x = this.x + this.xspeed*scl;
    this.y = this.y + this.yspeed*scl;

    this.x = constrain(this.x, 0, width-scl);
    this.x = constrain(this.x, 0, height-scl);
  }

  this.show = function() {
    fill(scl, scl, scl);
    for (var i = 0; i < this.tail.length; i++) {
      rect(this.tail[i].x, this.tail[i].y, scl, scl);
    }
    rect(this.x, this.y, scl, scl);
  }

}
